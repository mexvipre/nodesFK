<%- include('../partials/header') %>

<div class="container mt-5">
  <h1>Registrar Nuevo Pasajero</h1>
  
  <form id="formRegistrarPasajero" action="/pasajeros/create" method="POST">
    <div class="field">
      <label class="label">Nombre</label>
      <div class="control">
        <!-- Solo letras y espacios, con validación HTML de patrón -->
        <input class="input" type="text" name="nombre" id="nombre" required placeholder="Nombre del pasajero" pattern="^[a-zA-Z\s]+$" title="El nombre solo puede contener letras." />
      </div>
    </div>
    
    <div class="field">
      <label class="label">DNI</label>
      <div class="control">
        <!-- Solo números con exactamente 8 dígitos -->
        <input class="input" type="text" name="dni" id="dni" required placeholder="DNI del pasajero" pattern="^\d{8}$" title="El DNI debe tener exactamente 8 dígitos numéricos." />
      </div>
    </div>
    
    <div class="control">
      <button class="button is-primary" type="button" id="submitBtn">Registrar Pasajero</button>
    </div>
  </form>
</div>

<%- include('../partials/footer') %>

<!-- Script para SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Cuando se cambia el bus, obtener los asientos disponibles y ocupados para ese bus
    document.getElementById('id_bus').addEventListener('change', function() {
      const busId = this.value;
  
      // Hacer una solicitud AJAX para obtener los asientos disponibles y ocupados
      fetch(`/pasajes/asientos/${busId}`)
        .then(response => response.json())
        .then(data => {
          const asientoContainer = document.getElementById('asiento-buttons');
          asientoContainer.innerHTML = '';  // Limpiar los asientos actuales
  
          // Si hay asientos disponibles, crearlos como botones
          if (data.asientosDisponibles.length > 0) {
            data.asientosDisponibles.forEach(asiento => {
              const button = document.createElement('button');
              button.classList.add('button', 'is-small', 'is-info', 'm-1');
              button.type = 'button';
              button.textContent = `Asiento ${asiento}`;
              button.onclick = function() {
                // Seleccionar el asiento al hacer clic
                document.getElementById('asiento').value = asiento;
                // Cambiar el color del botón al seleccionarlo
                button.classList.remove('is-info');
                button.classList.add('is-success');
              };
              asientoContainer.appendChild(button);
            });
          } else {
            const message = document.createElement('p');
            message.textContent = 'No hay asientos disponibles';
            asientoContainer.appendChild(message);
          }
  
          // Deshabilitar los asientos ocupados
          data.asientosOcupados.forEach(asiento => {
            const button = document.querySelector(`#seat-${asiento}`);
            if (button) {
              button.disabled = true;
              button.classList.remove('is-info');
              button.classList.add('is-grey');
            }
          });
        })
        .catch(error => {
          console.error('Error al obtener los asientos disponibles:', error);
          Swal.fire('Error', 'Hubo un error al obtener los asientos disponibles.', 'error');
        });
    });
  </script>
  
